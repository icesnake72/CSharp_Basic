/*

2023.05.12

변수(Variable)와 Data Type
변수는 메모리상에서 값(Value)을 저장하는 역할을 한다
변수는 값을 저장하고 표현하기 위해 C#에서 지정한 데이터 타입 규칙에 의해 생성된다
변수를 사용하기위해서는 사용 시점 이전에 반드시 선언해야 한다

*/

using System;

//
// 변수의 선언

// Variable_Type Variable_Name[ = Value];

// 변수(지역변수)는 해당 메소드내에서 유일한 이름을 갖어야 한다
// 변수는 반드시 데이터 타입을 지정하여 선언해야 한다
// 변수는 선언과 함께 초기화도 할 수 있다


// 아래의 예에서 'int'는 데이터 타입을 지정한것이,
// number1, number2, number3은 각각 변수의 명칭이다
// number2, number3과 같이 변수를 선언함과 동시에 특정값으로 초기화가 가능하다 
int number1;
int number2 = 0;    // 변수의 선언과 함께 초기화를 하는게 일반적이지만 
int number3 = 1000; // 초기화 또한 변수에 값을 할당하는 연산이므로 필요할때 할당하여 할당하는 횟수를 줄이는게 좋은 방법이다


Console.WriteLine(number1); // 컴파일 에러 발생, 할당되지 않은 변수를 사용할 수 없다 
Console.WriteLine(number2);

// number3과 같이 변수를 선언하고 사용하지 않으면 경고(Warning)를 발생시킨다

// 컴파일 에러는 해석되지 않은 상태이므로 기계어로 번역이 불가해서 실행 파일을 생산할 수 없지만
// Warning은 실행 파일을 생성할 수는 있다, 하지만 이후 실행상황에서 코드가 에러(Runtime Error)를 발생시킬 수도 있음에 주의!!!


// Data Type과 표현의 범위 (bytes in memory)
// int : 정수형, 4 byte, 2^32(승)만큼 데이터를 표현할 수 있다 
// long : 정수형, 8 byte, 2^64(승)만큼 데이터를 표현할 수 있다
// float : 실수형, 4 byte, 부동소숫점 방식에 의해 실수형 데이터를 표현한다
// double : 실수형, 8 byte, 부동소숫점 방식에 의해 실수형 데이터를 표현한다
// char : 문자형, 2 byte, 유니코드 및 멀티바이트 문자열(MultiBytes String) 환경을 지원히기 위해 2 byte 할당
// bool : 참 또는 거짓, 1 byte, 실제로 1bit로 표현 가능하지만 메모리 할당의 최소 단위는 byte 이다 
//
// int형에서 2^32(승)은 어디서 왔는가?
// 1 bit는 두개의 서로 다른 데이터를 표현한다, 따라서 1 bit의 표현 범위는 2이고, 4byte는 32bit 이므로
// 4 byte로 표현할 수 있는 정수의 범위는 2^32(승)이 된다

// long 데이터 타입도 정수를 표현한다.8 byte를 할당받으므로 표현의 범위가 int 형보다 넓은데,
// 따라서 int보다 더 크고, 더 작은 정수를 표현할 수 있지만 그만큼 메모리를 많이 사용한다는 사실을 알아야 한다

// 실수형인 float와 double 타입은 정수형(int, long)과는 다른 부동 소숫점 방식에 의해 데이터를 저장한다
// 당연한 얘기겠지만 메모리 할당이 더 큰 double 형이 훨씬 더 정밀한 데이터를 저장(표현)할 수 있다




